[comment encoding = UTF-8 /]
[module SearchView('http://www.eclipse.org/uml2/5.0.0/UML')]
[import GeneratorDemo::pattern::crud::view::MasterDertailView/]
[import GeneratorDemo::pattern::crud::view::generateParentOrSon/]
[template public generateElementSearch(aModel : Model)]
[comment @main /]
[for (p : Package | aModel.packagedElement->filter(Package))]
				[if p.name.equalsIgnoreCase('com.softtek.acceleo.demo')]	
	 				[for (aClass : Class | p.packagedElement->filter(Class))]
      					[comment if aClass.getEAnnotation('crud').toString().contains('crud')/]
                        [ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Crud')) ]
[file (('features/Entities/').concat(aClass.name.toUpperFirst()).concat('/').concat(aClass.name.toUpperFirst()).concat('Search.js'), false), 'UTF-8') ]
import React, { Component, PropTypes } from 'react';
import { Button } from 'react-bootstrap';
import { connect } from 'react-redux';
import { reduxForm, Field } from 'redux-form';

class [name.toUpperFirst()/]Search extends Component {

  render() {
    const { handleSubmit, submitting } = this.props;

    return(
      <form
        role="form"
        className="input-group"
        onSubmit={handleSubmit(this.props.onSearchSubmit)}>
        <Field
          name="term"
          component="Input"
          className="form-control"
          placeholder="Buscar [name.toUpperFirst()/]..." />
        <span className="input-group-btn">
          <Button
            type="submit"
            className="btn btn-green"
            disabled={submitting}>
              <i className={`${submitting ? 'fa fa-refresh fa-spin' : 'fa fa-search'}`} />
          </Button>
        </span>
      </form>
    );
  }
}

[name.toUpperFirst()/]Search.propTypes = {
 [aModel.generateElementParentOrSon(aClass, 'ParentOrSonLowerCase')/]Id: PropTypes.string,
  handleSubmit: PropTypes.func.isRequired,
  submitting: PropTypes.bool.isRequired,
  onSearchSubmit: PropTypes.func.isRequired
};

const form = reduxForm({
  form: '[name.toUpperFirst()/]SearchForm',
});

export default connect(null, null)(form([name.toUpperFirst()/]Search));
[/file]
[/if]        
   		[/for]
	[/if]	
[/for]
[/template]
