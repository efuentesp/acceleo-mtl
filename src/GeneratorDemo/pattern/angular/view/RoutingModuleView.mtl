[comment encoding = UTF-8 /]
[module RoutingModuleView('http://www.eclipse.org/uml2/5.0.0/UML')]


[template public generateRoutingModuleView(aModel : Model)]
[comment @main /]

[for (p : Package | aModel.packagedElement->filter(Package))]
	[if p.name.equalsIgnoreCase('com.softtek.acceleo.demo')]	
[file (('src/app').concat('/app-routing.module.ts'), false, 'UTF-8')]
import { NgModule }                     from '@angular/core';
import { Routes, RouterModule }         from '@angular/router';
import { BaseComponent}                 from './base/base.component';

	 	[for (aClass : Class | p.packagedElement->filter(Class))]
			[ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Crud')
				or aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Wizard')) ]
import { [name.toUpperFirst()/]MngComponent}       from './[name.toLowerFirst()/]_mgmnt/[name.toLowerFirst()/]_mgmnt.component';
import { [name.toUpperFirst()/]Component}       from './[name.toLowerFirst()/]/[name.toLowerFirst()/].component';
			[/if]
		[/for]	
		
[for (aClass : Class | p.packagedElement->filter(Class))]
	[ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Wizard'))]
		[for (anAttribute: Property | getAllAttributes())]
import { [anAttribute.name.toUpperFirst()/]Component }    from './[anAttribute.name.toLowerCase()/]/[anAttribute.name.toLowerCase()/].component';		
		[/for]
import { WorkflowGuard }        from './workflow/workflow-guard.service';
import { WorkflowService }      from './workflow/workflow.service';
	[/if]
[/for]	

export const appRoutes: Routes = [ '[' /]
	 	[for (aClass : Class | p.packagedElement->filter(Class))]
			[ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Wizard')) ]
	{ path: '[name.toLowerFirst()/]_mgmnt',  component: [name.toUpperFirst()/]MngComponent},  
	{ path: '[name.toLowerFirst()/]',  component: [name.toUpperFirst()/]Component},  
			[/if]
		[/for]

[for (aClass : Class | p.packagedElement->filter(Class))]
	[ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Wizard'))]
		[for (anAttribute: Property | getAllAttributes())]
{ path: '[anAttribute.name.toLowerCase()/]',  component: [anAttribute.name.toUpperFirst()/]Component, canActivate: ['['/]WorkflowGuard[']'/] },  
		[/for]
	[/if]
[/for]

	 	[for (aClass : Class | p.packagedElement->filter(Class))]
			[ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Crud')) ]
	{ path: '[name.toLowerFirst()/]_mgmnt',  component: [name.toUpperFirst()/]MngComponent},  
	{ path: '[name.toLowerFirst()/]',  component: [name.toUpperFirst()/]Component},  
			[/if]
		[/for]
    { path: '**', component: BaseComponent }
[ ']' /];

@NgModule({
  imports: [ '[' /]RouterModule.forRoot(appRoutes, { useHash: true} )[ ']' /],
  exports: [ '[' /]RouterModule[ ']' /],
})

export class AppRoutingModule {}

[/file]
	[/if]
[/for]



[/template]
