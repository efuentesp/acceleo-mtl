[comment encoding = UTF-8 /]
[module ConfigurationFile('http://www.eclipse.org/uml2/5.0.0/UML')]


[template public generateElementConfigurationFiles(aModel : Model)]
[comment @main /]

[file (('src').concat('/main.ts'), false, 'UTF-8')]

import { enableProdMode } from '@angular/core';
import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';

import { AppModule } from './app/app.module';
import { environment } from './environments/environment';

if (environment.production) {
  enableProdMode();
}

platformBrowserDynamic().bootstrapModule(AppModule);

[/file]

[file (('src').concat('/polyfills.ts'), false, 'UTF-8')]

import 'core-js/es6/reflect';
import 'core-js/es7/reflect';
import 'zone.js/dist/zone';  

[/file]

[file (('src').concat('/tsconfig.app.json'), false, 'UTF-8')]

{
  "extends": "../tsconfig.json",
  "compilerOptions": {
    "outDir": "../out-tsc/app",
    "baseUrl": "./",
    "module": "es2015",
    "types": [ '[' /][ ']' /]
  },
  "exclude": [ '[' /]
    "test.ts",
    "**/*.spec.ts"
  [ ']' /]
}

[/file]

[file (('src').concat('/tsconfig.spec.json'), false, 'UTF-8')]

{
  "extends": "../tsconfig.json",
  "compilerOptions": {
    "outDir": "../out-tsc/spec",
    "baseUrl": "./",
    "module": "commonjs",
    "target": "es5",
    "types": [ '[' /]
      "jasmine",
      "node"
    [ ']' /]
  },
  "files": [ '[' /]
    "test.ts"
  [ ']' /],
  "include": [ '[' /]
    "**/*.spec.ts",
    "**/*.d.ts"
  [ ']' /]
}

[/file]

[file (('src').concat('/typings.d.ts'), false, 'UTF-8')]

/* SystemJS module definition */
declare var module: NodeModule;
interface NodeModule {
  id: string;
}

[/file]

[/template]
