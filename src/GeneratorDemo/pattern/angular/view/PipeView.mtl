[comment encoding = UTF-8 /]
[module PipeView('http://www.eclipse.org/uml2/5.0.0/UML')]

[template public generateElementPipeView(aModel : Model)]
[comment @main /]

[for (p : Package | aModel.packagedElement->filter(Package))]
	[if p.name.equalsIgnoreCase('com.softtek.acceleo.demo')]	
	 	[for (aClass : Class | p.packagedElement->filter(Class))]
			[ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Crud')
			   or aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Wizard')) ]
[file (('app/admin/pipe/').concat(aClass.name.toLower()).concat('.filter.pipe.ts'), false, 'UTF-8')]
import { Injectable, Pipe, PipeTransform } from '@angular/core';

@Pipe({
    name: 'filter[name.toUpperFirst()/]',
    pure: false
})

@Injectable()
export class Search[name.toUpperFirst()/]Pipe implements PipeTransform {
      transform(items: any['['/][']'/], busqueda[name.toUpperFirst()/]): any {
        return busqueda[name.toUpperFirst()/] && items ? items.filter(item =>
          	[for (attribute)] 
			[if (type.name.startsWith('exposed_filter'.concat(name.toLowerCase())))]
			[for (anElement: Property | type.allOwnedElements()->filter(Property) -> sortedBy(lower)) separator ('||')]
			[if (type.name.startsWith('modal'))]
			((item.[name.toLowerCase()/]Item+"").toString().indexOf(busqueda[aClass.name.toUpperFirst()/]) !== -1)
			[/if]
			[if (type.name.startsWith('radio'))]
			((item.[name.replaceAll('radio','').toLowerCase()/]Id+"").toString().indexOf(busqueda[aClass.name.toUpperFirst()/]) !== -1)
			[/if]
			[if (type.name = ('HCheckbox') and not(name.equalsIgnoreCase('id')))]
			((item.[name.toLowerCase()/]+"").toLowerCase().indexOf((busqueda[aClass.name.toUpperFirst()/]+"").toLowerCase()) !== -1) 
			[/if]
			[if (type.name = ('HInteger') and not(name.equalsIgnoreCase('id')))]
			((item.[name.toLowerCase()/]+"").toLowerCase().indexOf((busqueda[aClass.name.toUpperFirst()/]+"").toLowerCase()) !== -1) 
			[/if]
			[if (type.name = ('HDate') and not(name.equalsIgnoreCase('id')))]
			((item.[name.toLowerCase()/]+"").toLowerCase().indexOf((busqueda[aClass.name.toUpperFirst()/]+"").toLowerCase()) !== -1) 
			[/if]
			[if (type.name = ('HTextLong') and not(name.equalsIgnoreCase('id')))]
			((item.[name.toLowerCase()/]+"").toLowerCase().indexOf((busqueda[aClass.name.toUpperFirst()/]+"").toLowerCase()) !== -1) 
			[/if]
			[if (type.name = ('HRadio') and not(name.equalsIgnoreCase('id')))]
			((item.[name.toLowerCase()/]+"").toLowerCase().indexOf((busqueda[aClass.name.toUpperFirst()/]+"").toLowerCase()) !== -1) 
			[/if]
			[if (type.name = ('HBoolean') and not(name.equalsIgnoreCase('id')))]
			((item.[name.toLowerCase()/]+"").toLowerCase().indexOf((busqueda[aClass.name.toUpperFirst()/]+"").toLowerCase()) !== -1) 
			[/if]
			[if (type.name = ('HDouble') and not(name.equalsIgnoreCase('id')))]
			((item.[name.toLowerCase()/]+"").toLowerCase().indexOf((busqueda[aClass.name.toUpperFirst()/]+"").toLowerCase()) !== -1) 
			[/if]
			[if (type.name = ('HEmail') and not(name.equalsIgnoreCase('id')))]
			((item.[name.toLowerCase()/]+"").toLowerCase().indexOf((busqueda[aClass.name.toUpperFirst()/]+"").toLowerCase()) !== -1) 
			[/if]
			[if (type.name = ('HCurrency') and not(name.equalsIgnoreCase('id')))]
			((item.[name.toLowerCase()/]+"").toLowerCase().indexOf((busqueda[aClass.name.toUpperFirst()/]+"").toLowerCase()) !== -1) 
			[/if]
			[if (type.name = ('HImage') and not(name.equalsIgnoreCase('id')))]
			((item.[name.toLowerCase()/]+"").toLowerCase().indexOf((busqueda[aClass.name.toUpperFirst()/]+"").toLowerCase()) !== -1) 
			[/if]
			[if (type.name = ('HFile') and not(name.equalsIgnoreCase('id')))]
			((item.[name.toLowerCase()/]+"").toLowerCase().indexOf((busqueda[aClass.name.toUpperFirst()/]+"").toLowerCase()) !== -1) 
			[/if]
			[if (type.name = ('HText') and not(name.equalsIgnoreCase('id')))]
			((item.[name.toLowerCase()/]+"").toLowerCase().indexOf((busqueda[aClass.name.toUpperFirst()/]+"").toLowerCase()) !== -1) 
			[/if]			
			[/for]
			[/if]
			[/for]
        ): items;
    }
}
[/file]
[/if]
[/for]
[/if]
[/for]



[/template]
