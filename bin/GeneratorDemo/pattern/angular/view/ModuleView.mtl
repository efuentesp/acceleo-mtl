[comment encoding = UTF-8 /]
[module ModuleView('http://www.eclipse.org/uml2/5.0.0/UML')]

[template public generateElementModelView(aModel : Model)]
[comment @main /]

[for (p : Package | aModel.packagedElement->filter(Package))]
	[if p.name.equalsIgnoreCase('com.softtek.acceleo.demo')]	
[file (('src/app').concat('/app.module.ts'), false, 'UTF-8')]
import { NgModule }           from '@angular/core';
import { BrowserModule }      from '@angular/platform-browser';
import { FormsModule }        from '@angular/forms';
import { HttpModule, Http }   from '@angular/http';

/* App Root */
import { AppComponent }                         from './app.component';

/* Begin Components */
import { BaseComponent }              			from './base/base.component';

	 	[for (aClass : Class | p.packagedElement->filter(Class))]
			[ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Crud')
			   or aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Wizard')) ]

import { [name.toUpperFirst()/]MngComponent}    from './[name.toLowerFirst()/]_mgmnt/[name.toLowerFirst()/]_mgmnt.component';
import { [name.toUpperFirst()/]Component}       from './[name.toLowerFirst()/]/[name.toLowerFirst()/].component';
import { [name.toUpperFirst()/]Service }        from './[name.toLowerFirst()/]/[name.toLowerFirst()/].component.service';
import { Search[name.toUpperFirst()/]Pipe }     from './pipe/[name.toLower()/].filter.pipe';

[for (p : Property | aClass.attribute)]
	[if (p.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumRadio') 
      or p.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumCheck')
	  or p.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumSelect'))]	
import { [p.type.name.toUpperFirst()/]Service }        from './[p.type.name.toLowerFirst()/]/[p.type.name.toLowerFirst()/].component.service';	
	[/if]
[/for]
			[/if]
		[/for]	

[for (aClass : Class | p.packagedElement->filter(Class))]
	[ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Wizard'))]
import { WorkflowService }            from './workflow/workflow.service';
import { NavbarComponent }            from './navbar/navbar.component';
		[for (anAttribute: Property | getAllAttributes())]
import { [anAttribute.name.toUpperFirst()/]Component }    from './[anAttribute.name.toLowerCase()/]/[anAttribute.name.toLowerCase()/].component';		
		[/for]
	[/if]
[/for]	

/* Routing Module */
import { AppRoutingModule }    from './app-routing.module';
import { NgxPaginationModule}  from 'ngx-pagination';

@NgModule({
    imports:      [ '[' /] BrowserModule,
                    FormsModule,
                    AppRoutingModule,
					NgxPaginationModule,
                    HttpModule
                  [ ']' /],
    providers:    [ '[' /]
        [for (aClass : Class | p.packagedElement->filter(Class))]
			[ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Crud')) ]
				{ provide: [name.toUpperFirst()/]Service,   useClass: [name.toUpperFirst()/]Service },
[for (p : Property | aClass.attribute)]
	[if (p.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumRadio') 
      or p.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumCheck')
	  or p.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumSelect') )]
				{ provide: [p.type.name.toUpperFirst()/]Service,   useClass: [p.type.name.toUpperFirst()/]Service },
	[/if]
[/for]
			[/if]
		[/for]	
        
	[for (aClass : Class | p.packagedElement->filter(Class))]
			[ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Wizard')) ]
				{ provide: WorkflowService,  useClass: WorkflowService },
				{ provide: [name.toUpperFirst()/]Service,   useClass: [name.toUpperFirst()/]Service },
			[/if]
		[/for]	   

                  [ ']' /],
    declarations: [ '[' /] 		
        [for (aClass : Class | p.packagedElement->filter(Class)) ]
			[ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Crud')) ]
				[name.toUpperFirst()/]MngComponent,
				[name.toUpperFirst()/]Component,
				Search[aClass.name.toUpperFirst()/]Pipe,
			[/if]
		[/for]	
        [for (aClass : Class | p.packagedElement->filter(Class)) ]
			[ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Wizard')) ]
				NavbarComponent,	
			[for (anAttribute: Property | getAllAttributes())]
	 			[anAttribute.name.toUpperFirst()/]Component,		
			[/for]
				[name.toUpperFirst()/]MngComponent,
				[name.toUpperFirst()/]Component,
				Search[aClass.name.toUpperFirst()/]Pipe,
			[/if]
		[/for]	
				BaseComponent,
				AppComponent
				  [ ']' /],
    bootstrap:    [ '[' /] AppComponent [ ']' /]
})

export class AppModule {}

[/file]
	[/if]
[/for]



[/template]
