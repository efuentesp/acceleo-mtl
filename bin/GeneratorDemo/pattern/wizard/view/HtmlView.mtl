[comment encoding = UTF-8 /]
[module HtmlView('http://www.eclipse.org/uml2/5.0.0/UML')]
[import GeneratorDemo::pattern::wizard::view::HtmlModalView/]

[template public generateElementHtmlView(aModel : Model)]
[comment @main /]

[for (p : Package | aModel.packagedElement->filter(Package))]
	[if p.name.equalsIgnoreCase('com.softtek.acceleo.demo.wizard')]	
	 	[for (aClass : Class | p.packagedElement->filter(Class))]
			[ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Crud')
			   or aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Wizard')) ]
[file ('src/app/'.concat(aClass.name.toLowerFirst()).concat('/').concat(aClass.name.toLowerFirst()).concat('.component.html'), false, 'UTF-8')]
<section>
	<div class="content-wrapper">
	    <div class="content-heading">
	        <div class="pull-right">
	           <div class="btn-group">
	           </div>
	        </div>
	        Agregar [name.toUpperFirst()/]
	        <small data-localize="dashboard.WELCOME"></small>
	     </div>
     
		 <div class="row">
         	<div class="col-lg-12">
        		<div class="panel panel-default" id="panelChart9">
		            <!-- body -->
		            <div class="panel-body"> 
						<div class="panel-body">
							<span class="section">Datos del [name.toUpperFirst()/]</span>
			              <section>
			                <div class="container">
			                    <div class="board">
			                          <form #[name.toLowerFirst()/]Form="ngForm" class="editForm" novalidate>
											<!-- input -->
		                                    <div class='row'>
												<input class="form-control input-md" #id="ngModel" required id="id" name="id" type="hidden" placeholder="id" ['['/](ngModel)[']'/]="[aClass.name.toLowerFirst()/].id">
[for (anAttribute: Property | getAllAttributes())]
	[for (anElement: Property | anAttribute.type.allOwnedElements()->filter(Property) )]
		[if (anElement.name.equalsIgnoreCase('typeJava') and anElement.default.equalsIgnoreCase('string'))] 
                                                <div>
                                                    <div class="form-group">
                                                        <label class="control-label" for="[anAttribute.name.toLower()/]">[anAttribute.name.toUpperFirst()/]:</label>
                                                        <input class="form-control input-md" #[anAttribute.name.toLower()/]="ngModel" required id="[anAttribute.name.toLower()/]" name="[anAttribute.name.toLower()/]" type="text" placeholder="[anAttribute.name.toUpperFirst()/]" ['['/](ngModel)[']'/]="[aClass.name.toLowerFirst()/].[anAttribute.name.toLower()/]">
                                                        <div class="alert alert-danger" ['['/]hidden[']'/]="[anAttribute.name.toLower()/].valid">[anAttribute.name.toUpperFirst()/] is required</div>
                                                    </div>
                                                </div> 
		[/if]
		[if (anElement.name.equalsIgnoreCase('typeJava') and anElement.default.equalsIgnoreCase('date'))] 
			                                       <div class="form-group">
                                                        <label class="control-label" for="[anAttribute.name.toLower()/]">[anAttribute.name.toUpperFirst()/]</label>
														<input class="form-control input-md" #[anAttribute.name.toLower()/]="ngModel" required id="[anAttribute.name.toLower()/]" name="[anAttribute.name.toLower()/]" type="date" placeholder="[anAttribute.name.toUpperFirst()/]" ['['/](ngModel)[']'/]="[aClass.name.toLowerFirst()/].[anAttribute.name.toLower()/]">
                                                        <div class="alert alert-danger" ['['/]hidden[']'/]="[anAttribute.name.toUpperFirst()/].valid">[anAttribute.name.toUpperFirst()/] is required</div>
                                                    </div>
		[/if]
	[/for]
[/for]	

		                                    </div>
[for (p : Property | aClass.attribute)]
	[if (p.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumRadio'))]
		                                   	<div class='row'>
											  <label class="control-label" for="[p.type.name.toLower()/]">[p.type.name.toUpperFirst()/]:</label>  
	                                          <div *ngFor="let [p.type.name.toLowerFirst()/] of [p.type.name.toLowerFirst()/]List">
	                                              <div class="row">
	                                                <div class="col-lg-6">
	                                                  <div class="input-group">
	                                                    <span class="input-group-addon">
	                                                      <input type="radio" aria-label="Radio button for following text input" value="{{[p.type.name.toLowerFirst()/].valor}}" name="{{[p.type.name.toLowerFirst()/].nombre}}" ['['/](ngModel)[']'/]="[p.type.name.toUpperFirst()/]">
	                                                    </span>
	                                                    {{[p.type.name.toLowerFirst()/].nombre}}
	                                                  </div>
	                                                </div>
	                                            </div>
	                                          </div>   
		                                    </div>
	[/if]
[/for]

[for (p : Property | aClass.attribute)]
	[if (p.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumCheck'))]
									  
                                      <div *ngFor="let status of statusList; let i = index;">
                                          <div class="row">
											  <label class="control-label" for="[p.type.name.toLower()/]">[p.type.name.toUpperFirst()/]:</label>  
                                              <div class="input-group">
                                                <span class="input-group-addon">
                                                  <input type="checkbox" aria-label="Checkbox button for following text input" id="{{[p.type.name.toLower()/].valor}}" name="{{[p.type.name.toLower()/].nombre}}"
                                                  (change)="changeCheckbox([p.type.name.toLower()/]List, i)"
                                                  ['['/]checked[']'/]="[p.type.name.toLower()/].checked">
                                                </span>
                                                {{status.nombre}}
                                              </div>
                                        </div>
                                      </div>
	[/if]
[/for]
[for (p : Property | aClass.attribute)]
	[if (p.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumSelect'))]
                                  	<div class="row">
									  <label class="control-label" for="[p.type.name.toLower()/]">[p.type.name.toUpperFirst()/]:</label>  
                                      <select id="id" #Id="ngModel" class="hideLabel form-control" ['['/](ngModel)[']'/]="[p.type.name.toLower()/].id" name="id" (change)="selectName();">
                                         <option  selected="" value=""></option>
                                         <option  ['['/]ngValue[']'/]="[p.type.name.toLower()/].id" *ngFor="let [p.type.name.toLower()/] of [p.type.name.toLower()/]List">{{[p.type.name.toLower()/].nombre}} </option>
                                      </select>
                                	</div>
	[/if]
[/for]
[for (p : Property | aClass.attribute)]
	[if (p.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='Modal'))]

								<div>
										<div class="form-group">
											<label class="control-label" for="[p.type.name.toLowerCase()/]">[p.type.name.toLowerFirst()/]:</label>
												<div class="form-group text-right">
														<div class="col-lg-3">
															<div class="input-group">
																<input type="text" class="form-control" placeholder="[p.type.name.toLowerFirst()/]...">
																<span class="input-group-btn">
																	<button class="btn btn-secondary" type="button" data-toggle="modal" data-target="#modal[p.type.name.toLowerFirst()/]">
																		<em class="fa fa-search"></em>
																	</button>
																</span>
															</div>
														</div>
												</div>
										</div>
								</div>


<!-- Modal [p.type.name.toLowerCase()/] -->
<div id="modal[p.type.name.toUpperFirst()/]" class="modal fade"  role="dialog" data-backdrop="false" style="position: position: absolute; background: rgba(0, 0, 0, 0.31);">
	<div class="modal-dialog" style="width:60%">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal">&times;</button>
				<h4 class="modal-title">[p.type.name.toUpperFirst()/]</h4>
			</div>
			<div class="modal-body">
				<div class='row'>
					<div class="col-lg-6">
						<br/>
					</div>
					<div class="col-lg-6">
						<div class="input-group">
							<input type="text" class="form-control" placeholder="Search for..." name="busqueda[p.type.name.toLowerCase()/]" ['['/](ngModel)[']'/]="busqueda[p.type.name.toUpperFirst()/]">
							<span class="input-group-btn">
								<button class="btn btn-secondary" type="button"><em class="fa fa-search"></em></button>
							</span>
						</div>
					</div>
				</div>

				<div class="row">
				<table class="table table-striped table-bordered" style="border: 1px solid #dee2e6; margin:20px; width:96%;">
						<thead>
							<tr>
								
							</tr>
						</thead>
						<tbody>
							<tr *ngFor="let [name.toLowerCase()/] of [name.toLowerCase()/]List | filter: busqueda[aClass.name.toUpperFirst()/] | paginate: {itemsPerPage: 10, currentPage:page, id: '1'}; let i = index" (click)="setClickedRow[name.toLowerFirst()/](i, afiliado)" >
																								  
							</tr>
						</tbody>
					</table>

						<div align="center" style="margin-top:15px;">
							<pagination-controls (pageChange)="page = $event" id="1" maxSize="10" directionLinks="true" autoHide="false" previousLabel="<"
								nextLabel=">" screenReaderPaginationLabel="Pagination" screenReaderPageLabel="page" screenReaderCurrentLabel="You're on page">
							</pagination-controls>
						</div>

					<div class="row">
						<div class="text-right" style="padding-right:40px">
									<button class="btn btn-default" > <span style="margin-right:10px;"  class="fa fa-arrow-left"></span> Regresar</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>


            
	[/if]
[/for]

[for (p : Property | aClass.attribute)]
	[if (p.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='Grid'))]

									  <input name="busqueda[aClass.name.toUpperFirst()/]" ['['/](ngModel)[']'/]="busqueda[aClass.name.toUpperFirst()/]" class="pull-right" style="margin:10px;" placeholder="Search...">
				                      <table class="table table-striped table-bordered" style="border: 1px solid #dee2e6; margin:20px; width:100%;">
			                          <thead>
			                            <tr>
			                              <th>Id </th>
			                              <th>Nombre</th>
			                              <th>Direccion</th>
			                              <th>Numero</th>
			                              <th>RFC</th>
			                            </tr>
			                          </thead>
			                          <tbody>
			                            <tr *ngFor="let [aClass.name.toLowerFirst()/] of [aClass.name.toLowerFirst()/]List | filter: busqueda[aClass.name.toUpperFirst()/] | paginate: {itemsPerPage: 10, currentPage:page, id: '1'}; let i = index" (click)="setClickedRow[aClass.name.toUpperFirst()/](i, [aClass.name.toLower()/])" >
			                              <td>{{[aClass.name.toLowerFirst()/].id}}</td>
			                              <td>{{[aClass.name.toLowerFirst()/].nombre}}</td>
			                              <td>{{[aClass.name.toLowerFirst()/].direccion}}</td>
			                              <td>{{[aClass.name.toLowerFirst()/].numero}}</td>
			                              <td>{{[aClass.name.toLowerFirst()/].rfc}}</td>
			                            </tr>
			                          </tbody>
			                        </table>

									<div align="center" style="margin-top:15px;">
										  <pagination-controls (pageChange)="page = $event" id="1" maxSize="10" directionLinks="true" 
											autoHide="false" previousLabel="<"
											nextLabel=">" screenReaderPaginationLabel="Pagination" 
											screenReaderPageLabel="page" screenReaderCurrentLabel="You're on page">
										  </pagination-controls>
									</div>


			                    
	[/if]
[/for]

[for (p : Property | aClass.attribute)]
	[if (p.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='ModalSearch')) ]
  		
                                <div class='row'>
                                    <div class="form-group">
                                        <label class="control-label" for="[p.name.toLower()/]">[p.name.toUpperFirst()/]:</label>
                                        <input class="form-control required input-md" #[p.name.toLower()/]="ngModel" disabled  id="[p.name.toLower()/]" name="[p.name.toLower()/]" type="text" placeholder="[p.name.toUpperFirst()/]" ['['/](ngModel)[']'/]="[aClass.name.toLowerFirst()/].[p.name.toLower()/]">
										<br/>
										<button class="btn btn-info" data-toggle="modal" data-target="#[p.type.name.toLowerFirst()/]" style="margin-right:20px; float:right;">
                                        Modal <span class="fa fa-plus"></span>
                                        </button>                                        
<!--<div class="alert alert-danger" ['['/]hidden[']'/]="[p.name.toLower()/].valid">[p.name.toUpperFirst()/] is required</div>-->
										
                                    </div>
                                </div>  


[for (pa : Package | aModel.packagedElement->filter(Package))]
	[if pa.name.equalsIgnoreCase('com.softtek.acceleo.demo.wizard')]	
	 	[for (aClass : Class | pa.packagedElement->filter(Class))]
			[ if (aClass.getAppliedStereotypes()->filter(Stereotype)-> exists(s: Stereotype | s.name='Crud')) ]
				[comment Busca el Crud llamado igual/]
				[if name.equalsIgnoreCase(p.name)]
				<!--
                <div>
                   
                </div> 
				-->
	
				<div id="[p.type.name.toLowerFirst()/]" class="modal fade"  role="dialog" data-backdrop="false" style="position: position: absolute;left: 10%;top: 18%">
                      <div class="modal-dialog">
                        <div class="modal-content">

                          <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">[name.toUpperFirst()/]s</h4>
                          </div>

						 
                          <div class="modal-body">
							[for (prt : Property | aClass.attribute)]
								[if (prt.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='Grid'))]
									  <input name="busqueda[aClass.name.toUpperFirst()/]" ['['/](ngModel)[']'/]="busqueda[aClass.name.toUpperFirst()/]" class="pull-right" style="margin:10px;" placeholder="Search...">
				                      <table class="table table-striped table-bordered" style="border: 1px solid #dee2e6; margin:20px; width:100%;">
			                          <thead>
			                            <tr>
												<th> Id </th>
											[for (pc : Property | aClass.getAllAttributes())]
												[if not ( (pc.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='Grid')) 
									                 or   (pc.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='Modal'))
													 or   (pc.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumRadio'))
													 or   (pc.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumCheck'))
													 or   (pc.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumSelect')) )]
													<th>[pc.name.toUpperFirst()/] </th>
												[/if]
											[/for]
			                            </tr>
			                          </thead>
			                          <tbody>
			                            <tr *ngFor="let [aClass.name.toLowerFirst()/] of [aClass.name.toLowerFirst()/]List | filter: busqueda[aClass.name.toUpperFirst()/] | paginate: {itemsPerPage: 10, currentPage:page, id: '1'}; let i = index" (click)="setClickedRow[aClass.name.toUpperFirst()/](i, [aClass.name.toLower()/])" >
											<td> {{[aClass.name.toLower()/].id}} </td>
											[for (pc : Property | aClass.getAllAttributes())]
												[if not ( (pc.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='Grid')) 
									                 or   (pc.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='Modal'))
													 or   (pc.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumRadio'))
													 or   (pc.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumCheck'))
													 or   (pc.type.getAppliedStereotypes() -> exists(s: Stereotype | s.name='EnumSelect')) )]
													<td> {{[aClass.name.toLower()/].[pc.name.toLower()/]}} </td>
												[/if]
											[/for]		                              
			                            </tr>
			                          </tbody>
			                        </table>

									<div align="center" style="margin-top:15px;">
										  <pagination-controls (pageChange)="page = $event" id="1" maxSize="10" directionLinks="true" 
											autoHide="false" previousLabel="<"
											nextLabel=">" screenReaderPaginationLabel="Pagination" 
											screenReaderPageLabel="page" screenReaderCurrentLabel="You're on page">
										  </pagination-controls>
									</div>

							[comment aModel.generateElementHtmlView(aModel)/]
								[/if]
							[/for]
						  </div>
                        </div>
                      </div>
                  </div> 				
				[/if]

			[/if]
		[/for]
	[/if]
[/for]

  
								                  
	[/if]
[/for]

										<div class="text-right">
					                        <button class="btn btn-primary" (click)="save([name.toLowerFirst()/]Form)"> <span style="margin-right:10px;"  class="fa fa-save"></span> Save</button>
					                    </div>
			                          </form>
			                    </div>
			                </div>
			              </section>
			            </div>
					</div>
					<!-- /body -->

				</div>
			</div>
		</div>
	</div>
</section>
[/file]
			[/if]
		[/for]
	[/if]
[/for]

[/template]
